version: '3.8'

services:
  raft-node-1:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: raft-node-1
    hostname: raft-node-1
    ports:
      - "50051:50051"
      - "8080:8080"
    environment:
      - RAFT_NODE_ID=node-1
      - RAFT_BIND_ADDRESS=0.0.0.0
      - RAFT_PORT=50051
      - RAFT_PEERS=raft-node-2:50051,raft-node-3:50051
      - RAFT_METRICS_PORT=8080
    volumes:
      - raft-node-1-data:/app/data
    networks:
      - raft-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  raft-node-2:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: raft-node-2
    hostname: raft-node-2
    ports:
      - "50052:50051"
      - "8081:8080"
    environment:
      - RAFT_NODE_ID=node-2
      - RAFT_BIND_ADDRESS=0.0.0.0
      - RAFT_PORT=50051
      - RAFT_PEERS=raft-node-1:50051,raft-node-3:50051
      - RAFT_METRICS_PORT=8080
    volumes:
      - raft-node-2-data:/app/data
    networks:
      - raft-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  raft-node-3:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: raft-node-3
    hostname: raft-node-3
    ports:
      - "50053:50051"
      - "8082:8080"
    environment:
      - RAFT_NODE_ID=node-3
      - RAFT_BIND_ADDRESS=0.0.0.0
      - RAFT_PORT=50051
      - RAFT_PEERS=raft-node-1:50051,raft-node-2:50051
      - RAFT_METRICS_PORT=8080
    volumes:
      - raft-node-3-data:/app/data
    networks:
      - raft-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: raft-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - raft-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: raft-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - raft-network
    restart: unless-stopped

volumes:
  raft-node-1-data:
  raft-node-2-data:
  raft-node-3-data:
  prometheus-data:
  grafana-data:

networks:
  raft-network:
    driver: bridge
